version: "3.9"

services:
  {{ cvmfs_service }}
  
  jupyterhub:
    depends_on:
      - http_proxy
      {{ jupyterlab_collaborative_service_dependency }}
    image: {{ compose_base_jhub_image }}
    restart: unless-stopped
    command:
      - /usr/bin/python3
      - /usr/local/bin/jupyterhub
      - --debug
      - --config=/srv/jupyterhub/jupyterhub_config.py
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/local/share/dodasts/jupyterhub/cookies:/srv/jupyterhub/cookies
      - /usr/local/share/dodasts/jupyterhub/db:/srv/jupyterhub/db
      {{ jupyterhub_mount_config }}
    environment:
      - OAUTH_ENDPOINT={{ iam_url }}
      - OAUTH_CALLBACK_URL=https://{{ dns_name }}:{{ jupyter_port }}/hub/oauth_callback
      - OAUTH_GROUPS={{ iam_groups }}
      - OAUTH_SUB={{ iam_subject }}
      - {{ jupyter_gpu }}
      - {{ jupyterhub_all_gpu_uuids }}
      - ADMIN_OAUTH_GROUPS={{ iam_admin_groups }}
      - IAM_CLIENT_ID={{ iam_client_id }}
      - IAM_CLIENT_SECRET={{ iam_client_secret }}
      - JUPYTER_IMAGE_LIST={{ jupyter_images }}
      - JUPYTER_RAM_LIST={{ list_ram_size }}
      - JUPYTER_PROXY_TOKEN={{ jupyter_proxy_token }}
      - JUPYTERHUB_API_TOKEN={{  jupyterhub_api_token.stdout | string }}
      - JUPYTERHUB_CRYPT_KEY={{  jupyterhub_crypt_key.stdout | string }}
      - JUPYTER_WITH_CVMFS={{ jupyter_with_cvmfs }}
      - DEFAULT_SPAWNER={{ jupyter_default_spawner }}
      - POST_START_CMD={{ jupyter_post_start_cmd }}
      - JUPYTER_COLLAB_SERVICE={{ jupyter_collab_service }}
      - DOCKER_NOTEBOOK_MOUNT_DIR={{ jupyter_host_mount_dir }}
      - DOCKER_NOTEBOOK_DIR={{ jupyter_mount_dir }}
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.jupyterhub-redirect-ssl.redirectscheme.scheme=https"
      - "traefik.http.routers.jupyterhub-nossl.middlewares=jupyterhub-redirect-ssl"
      - "traefik.http.routers.jupyterhub-nossl.rule=Host(`{{ dns_name }}`)"
      - "traefik.http.routers.jupyterhub-nossl.entrypoints=web"
      - "traefik.http.routers.jupyterhub.rule=Host(`{{ dns_name }}`)"
      - "traefik.http.routers.jupyterhub.entrypoints=websecure"
      - "traefik.http.routers.jupyterhub.tls=true"
      - "traefik.http.services.jupyterhub.loadbalancer.server.port=8000"

  proxy:
    container_name: proxy
    image: harbor.cloud.infn.it/cache/library/traefik:${TRAEFIK_VERSION:-latest}
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - /opt/traefik:/config
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.file.directory=/config"
      - "--providers.file.watch=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"

  grafana_sidecar:
    depends_on:
      - proxy
    image: alpine:latest
    container_name: grafana_sidecar
    command: /bin/sh -c "
        apk add --no-cache jq
        && nc -klp 1337
      "

  http_proxy:
    depends_on:
      - grafana_sidecar
    image: {{ compose_base_http_proxy_image }}
    restart: unless-stopped
    entrypoint: /bin/sh
    command: -c "
        while ! nc -z grafana_sidecar 1337; do sleep 5; done
        && configurable-http-proxy
        --ip=0.0.0.0
        --port={{ jupyter_port }}
        --api-ip=0.0.0.0
        --api-port=8001
        --default-target=http://jupyterhub:8088
        --error-target=http://jupyterhub:8088/hub/error
      "
    environment:
      - CONFIGPROXY_AUTH_TOKEN={{ jupyter_proxy_token }}
    ports:
      - {{ jupyter_port }}:{{ jupyter_port }}
      - 8001:8001
    
  {{ jupyterlab_collaborative_service }}

networks:
  default:
    name: jupyterhub
