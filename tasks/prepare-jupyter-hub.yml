---
- name: download jupyterhub
  git:
    repo: "{{ jupyter_repo_url }}"
    dest: /usr/local/share/dodasts/jupyterhub
    force: yes
  when: (not (jupyterlab_collaborative | bool))

- name: "download jupyterhub + collaborative service"
  git:
    repo: "{{ jupyter_repo_url }}"
    dest: /usr/local/share/dodasts/jupyterhub
    force: yes
    version: collaborative
  when: (jupyterlab_collaborative | bool)

- name: create JUPYTERHUB_CRYPT_KEY
  shell: openssl rand -hex 32
  register: jupyterhub_crypt_key

- name: create JUPYTERHUB_API_TOKEN
  shell: openssl rand -hex 32
  register: jupyterhub_api_token
  when: (jupyterlab_collaborative | bool)

- name: create JUPYTER_TOKEN
  shell: openssl rand -hex 32
  register: jupyter_token
  when: (jupyterlab_collaborative | bool)

- name: create jupyterhub proxy token
  shell: openssl rand -hex 32
  register: generated_jupyter_proxy_token
  when: (jupyter_proxy_token == "")

- name: add jupyterlab collaborative dependency
  set_fact:
    key_value: "yes"
    jupyterlab_collaborative_image_param: "image: {{ jupyterlab_collaborative_image }}"
  when: ((jupyterlab_collaborative | bool ) and jupyterlab_collaborative_image != "")

- name: add jupyterlab collaborative gpu
  set_fact:
    key_value: "yes"
    jupyter_proxy_token: "{{ generated_jupyter_proxy_token.stdout | string }}"
  when: (jupyter_proxy_token == "")

# compose gpu support: https://docs.docker.com/compose/gpu-support/
# deploy:
#   resources:
#     reservations:
#       devices:
#       - driver: nvidia
#         count: 1
#         capabilities: [gpu, utility]
- name: add jupyterlab collaborative gpu
  set_fact:
    key_value: "yes"
    jupyterlab_collaborative_gpu_param: |
      deploy:
            resources:
              reservations:
                devices:
                  - capabilities: [ gpu ]

  when: ((jupyterlab_collaborative | bool ) and (jupyterlab_collaborative_use_gpu | bool))

- name: prepare collaborative jupyterlab
  set_fact:
    key_value: "yes"
    jupyterlab_collaborative_service: |
      collab_proxy:
          # build: collab_proxy
          image: {{ compose_base_collab_http_proxy_image }}
          environment:
            - HOST_IP={{ server_ip }}
            - JUPYTERHUB_BASE_URL=http://jupyterhub:8088
            - JUPYTERHUB_API_URL=http://jupyterhub:8088/hub/api
            - JUPYTERHUB_SERVICE_PREFIX=/services/Collaborative-Jupyter/
            - JUPYTERHUB_API_TOKEN={{jupyterhub_api_token.stdout | string}}
            - JUPYTER_TOKEN={{ jupyter_token.stdout | string }}
          ports:
            - 8099:8099

        jupyterlab_collab:
          {{ jupyterlab_collaborative_image_param }}
          {{ jupyterlab_collaborative_gpu_param }}

          volumes:
              - /usr/local/share/dodasts/certs/jupyter:/usr/local/share/dodasts/certs/jupyter
              - /jupyter-mounts/collaborativefolder/:/jupyter-workspace/collaborativefolder
          environment:
              - JUPYTER_TOKEN={{ jupyter_token.stdout | string }}
              - JUPYTERHUB_API_TOKEN={{ jupyterhub_api_token.stdout | string }}
          ports:
            - 8889:8888
  when: (jupyterlab_collaborative | bool)

- name: add jupyterlab collaborative dependency
  set_fact:
    key_value: "yes"
    jupyterlab_collaborative_service_dependency: "- collab_proxy"
  when: (jupyterlab_collaborative | bool)

- name: ram size
  debug:
    var: ansible_facts.memtotal_mb

- name: create ram giga var
  set_fact:
    key_value: "yes"
    ram_giga: "{{ ((ansible_facts.memtotal_mb|int) / 1000)| round | int }}"

- name: create ram list
  set_fact:
    key_value: "yes"
    list_ram_sizes: "{{ [1] + range(2, (ram_giga|int) + 1, 2) | list }}"

- name: result ram list
  debug:
    var: list_ram_sizes

- name: create ram list string
  set_fact:
    key_value: "yes"
    list_ram_size: "{{ list_ram_sizes | product(['G']) | map('join', '') | list | join(',') }}"

# ---------- Create directory for jupyterhub ----------
- name: Create directory for jupyterhub
  file:
    path: /usr/local/share/dodasts/jupyterhub
    state: directory
    mode: 0755

- name: Create directory for jupyterhub cookies
  file:
    path: /usr/local/share/dodasts/jupyterhub/cookies
    state: directory
    mode: 0755

- name: Create directory for jupyterhub db
  file:
    path: /usr/local/share/dodasts/jupyterhub/db
    state: directory
    mode: 0755

- name: Create directory for jupyterhub collaborative
  file:
    path: /usr/local/share/collaborativefolder
    state: directory
    mode: 0755

- name: "prepare variables for jupyter"
  set_fact:
    key_value: "yes"
    jupyter_gpu: "WITH_GPU=true"
    cacheable: yes
  when: (use_gpu | bool)

- name: prepare compose file
  template:
    src: jupyter_hub-compose.j2
    dest: /usr/local/share/dodasts/jupyterhub/docker-compose.yaml

# finally pre-cache default images
- name: pull images
  command: docker pull "{{ item }}"
  with_items: "{{ jupyter_images.split() + [ jupyterlab_collaborative_image, compose_base_jhub_image, compose_base_http_proxy_image, compose_base_collab_http_proxy_image ]}}"
  async: 1800 # 30 min
  poll: 0
