---
# ---------- Create directory for monitoring ----------
- name: Create directory for monitoring
  file:
    path: /usr/local/share/monitoring
    state: directory
    mode: 0755

# ---------- Create directory for grafana ----------
- name: Create directory for grafana
  file:
    path: /usr/local/share/monitoring/grafana
    state: directory
    mode: 0755

# ---------- Create grafana configs ----------
- name: Create grafana configs
  copy:
    src: "{{ role_path }}/files/grafana"
    dest: /usr/local/share/monitoring
    directory_mode: 0755

# ---------- Install IAM client ----------
- name: Install golang [Ubuntu]
  apt:
    name: golang
    state: present
    autoclean: yes
    autoremove: yes
    update_cache: yes
  when: ansible_facts['distribution'] == 'Ubuntu'

- name: download dodas-IAMClientRec
  git:
    repo: "https://github.com/dciangot/dodas-IAMClientRec"
    dest: /usr/local/share/dodas-IAMClientRec
    force: yes

- name: compile dodas-IAMClientRec
  shell:
    cmd: go get github.com/dciangot/sts-wire/pkg/core && go build
    chdir: /usr/local/share/dodas-IAMClientRec

- name: link executable dodas-IAMClientRec
  shell:
    cmd: ln -s /usr/local/share/dodas-IAMClientRec/dodas-IAMClientRec /usr/local/bin/dodas-IAMClientRec
    creates: /usr/local/bin/dodas-IAMClientRec

- name: download dodas-x509
  git:
    repo: "https://github.com/DODAS-TS/dodas-x509.git"
    dest: /usr/local/share/dodas-x509
    force: yes

- name: compile dodas-x509
  shell:
    cmd: go get github.com/dodas-ts/dodas-x509/pkg/v1 && go build
    chdir: /usr/local/share/dodas-x509

- name: link executable dodas-x509
  shell:
    cmd: ln -s /usr/local/share/dodas-x509/dodas-x509 /usr/local/bin/dodas-x509
    creates: /usr/local/bin/dodas-x509

- name: create certificates for grafana
  shell:
    cmd: dodas-x509 --generate-all --hostname {{server_ip}} && chown 472:472 /tmp/hostcert.* && mkdir -p /tmp/certs && mv /tmp/hostcert.* /tmp/certs
    creates:
      - /tmp/certs/hostcert.pem
      - /tmp/certs/hostcert.key

- name: Create grafana config
  template:
    src: grafana-custom-ini
    dest: /usr/local/share/monitoring/grafana/config/config.ini

- name: get client id and secret
  shell:
    cmd: /usr/local/share/monitoring/grafana/utils/get_client {{iam_url}} {{server_ip}}/login/generic_oauth
  when: grafana_client_id == "CLIENT_ID" && grafana_client_secret == CLIENT_SECRET"

# ---------- Enable monitoring also with nvidia ----------
- name: prepare variables for monitoring
  set_fact:
    key_value: "yes"
    grafana_service: |
      grafana:
          image: grafana/grafana:latest
          container_name: monitoring_grafana
          depends_on:
            - prometheus
          restart: unless-stopped
          command:
            - "-config"
            - "/opt/grafana/custom.ini"
          ports:
            - 3000:3000
          volumes:
            - /usr/local/share/monitoring/grafana/config:/opt/grafana/
            - /usr/local/share/monitoring/grafana/config/provisioning:/etc/grafana/provisioning
            - /usr/local/share/monitoring/grafana/dash_models:/opt/dash_models
          environment:
            - GF_SECURITY_ADMIN_PASSWORD={{grafana_password}}
            - GF_USERS_ALLOW_SIGN_UP=false
    cacheable: yes
